<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="470" onload="init(evt)" viewBox="0 0 1200 470" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="470.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="453" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="453" > </text>
<g id="frames">
<g >
<title>free_pages_and_swap_cache (6 samples, 0.59%)</title><rect x="1049.6" y="117" width="7.0" height="15.0" fill="rgb(238,120,28)" rx="2" ry="2" />
<text  x="1052.61" y="127.5" ></text>
</g>
<g >
<title>stats::table::Table::from_csv (99 samples, 9.73%)</title><rect x="425.4" y="373" width="114.8" height="15.0" fill="rgb(236,159,21)" rx="2" ry="2" />
<text  x="428.38" y="383.5" >stats::table::..</text>
</g>
<g >
<title>clear_page_rep (1 samples, 0.10%)</title><rect x="1184.2" y="181" width="1.2" height="15.0" fill="rgb(253,147,39)" rx="2" ry="2" />
<text  x="1187.20" y="191.5" ></text>
</g>
<g >
<title>__mod_node_page_state (1 samples, 0.10%)</title><rect x="785.1" y="213" width="1.1" height="15.0" fill="rgb(226,66,30)" rx="2" ry="2" />
<text  x="788.06" y="223.5" ></text>
</g>
<g >
<title>bprm_execve (4 samples, 0.39%)</title><rect x="1185.4" y="293" width="4.6" height="15.0" fill="rgb(248,0,10)" rx="2" ry="2" />
<text  x="1188.36" y="303.5" ></text>
</g>
<g >
<title>__alloc_pages (9 samples, 0.88%)</title><rect x="512.4" y="197" width="10.4" height="15.0" fill="rgb(232,8,1)" rx="2" ry="2" />
<text  x="515.40" y="207.5" ></text>
</g>
<g >
<title>&lt;std::io::Lines&lt;B&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 samples, 1.47%)</title><rect x="84.3" y="373" width="17.4" height="15.0" fill="rgb(244,199,37)" rx="2" ry="2" />
<text  x="87.26" y="383.5" ></text>
</g>
<g >
<title>folio_remove_rmap_ptes (1 samples, 0.10%)</title><rect x="1048.4" y="149" width="1.2" height="15.0" fill="rgb(240,182,9)" rx="2" ry="2" />
<text  x="1051.45" y="159.5" ></text>
</g>
<g >
<title>free_unref_page_list (2 samples, 0.20%)</title><rect x="1051.9" y="85" width="2.3" height="15.0" fill="rgb(228,179,19)" rx="2" ry="2" />
<text  x="1054.93" y="95.5" ></text>
</g>
<g >
<title>std::io::read_until (22 samples, 2.16%)</title><rect x="564.6" y="373" width="25.5" height="15.0" fill="rgb(247,50,47)" rx="2" ry="2" />
<text  x="567.61" y="383.5" >s..</text>
</g>
<g >
<title>[unknown] (4 samples, 0.39%)</title><rect x="1185.4" y="389" width="4.6" height="15.0" fill="rgb(209,127,23)" rx="2" ry="2" />
<text  x="1188.36" y="399.5" ></text>
</g>
<g >
<title>std::io::BufRead::read_line (6 samples, 0.59%)</title><rect x="540.2" y="373" width="7.0" height="15.0" fill="rgb(249,225,0)" rx="2" ry="2" />
<text  x="543.25" y="383.5" ></text>
</g>
<g >
<title>kthread_blkcg (1 samples, 0.10%)</title><rect x="759.5" y="245" width="1.2" height="15.0" fill="rgb(221,19,31)" rx="2" ry="2" />
<text  x="762.54" y="255.5" ></text>
</g>
<g >
<title>lru_gen_add_folio (3 samples, 0.29%)</title><rect x="526.3" y="181" width="3.5" height="15.0" fill="rgb(237,227,4)" rx="2" ry="2" />
<text  x="529.32" y="191.5" ></text>
</g>
<g >
<title>event_sched_in (2 samples, 0.20%)</title><rect x="850.0" y="181" width="2.4" height="15.0" fill="rgb(208,123,2)" rx="2" ry="2" />
<text  x="853.04" y="191.5" ></text>
</g>
<g >
<title>do_user_addr_fault (1 samples, 0.10%)</title><rect x="1184.2" y="341" width="1.2" height="15.0" fill="rgb(233,155,22)" rx="2" ry="2" />
<text  x="1187.20" y="351.5" ></text>
</g>
<g >
<title>ctx_resched (4 samples, 0.39%)</title><rect x="1185.4" y="165" width="4.6" height="15.0" fill="rgb(221,42,46)" rx="2" ry="2" />
<text  x="1188.36" y="175.5" ></text>
</g>
<g >
<title>core::str::&lt;impl str&gt;::trim_matches (25 samples, 2.46%)</title><rect x="340.7" y="373" width="29.0" height="15.0" fill="rgb(224,135,38)" rx="2" ry="2" />
<text  x="343.68" y="383.5" >co..</text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (3 samples, 0.29%)</title><rect x="848.9" y="373" width="3.5" height="15.0" fill="rgb(246,15,54)" rx="2" ry="2" />
<text  x="851.88" y="383.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (5 samples, 0.49%)</title><rect x="689.9" y="133" width="5.8" height="15.0" fill="rgb(246,66,39)" rx="2" ry="2" />
<text  x="692.92" y="143.5" ></text>
</g>
<g >
<title>stats::table::Table::group_num_agg (35 samples, 3.44%)</title><rect x="1143.6" y="389" width="40.6" height="15.0" fill="rgb(249,130,27)" rx="2" ry="2" />
<text  x="1146.59" y="399.5" >sta..</text>
</g>
<g >
<title>sysmalloc (1 samples, 0.10%)</title><rect x="1184.2" y="389" width="1.2" height="15.0" fill="rgb(208,110,4)" rx="2" ry="2" />
<text  x="1187.20" y="399.5" ></text>
</g>
<g >
<title>core::str::converts::from_utf8 (2 samples, 0.20%)</title><rect x="1012.5" y="389" width="2.3" height="15.0" fill="rgb(240,68,19)" rx="2" ry="2" />
<text  x="1015.48" y="399.5" ></text>
</g>
<g >
<title>generic_file_read_iter (5 samples, 0.49%)</title><rect x="416.1" y="245" width="5.8" height="15.0" fill="rgb(227,63,53)" rx="2" ry="2" />
<text  x="419.10" y="255.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (13 samples, 1.28%)</title><rect x="69.2" y="373" width="15.1" height="15.0" fill="rgb(221,95,45)" rx="2" ry="2" />
<text  x="72.17" y="383.5" ></text>
</g>
<g >
<title>perf_ibs_start (2 samples, 0.20%)</title><rect x="850.0" y="149" width="2.4" height="15.0" fill="rgb(239,58,43)" rx="2" ry="2" />
<text  x="853.04" y="159.5" ></text>
</g>
<g >
<title>exec_binprm (4 samples, 0.39%)</title><rect x="1185.4" y="261" width="4.6" height="15.0" fill="rgb(221,9,18)" rx="2" ry="2" />
<text  x="1188.36" y="271.5" ></text>
</g>
<g >
<title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (18 samples, 1.77%)</title><rect x="17.0" y="389" width="20.8" height="15.0" fill="rgb(212,4,3)" rx="2" ry="2" />
<text  x="19.96" y="399.5" ></text>
</g>
<g >
<title>filemap_read (5 samples, 0.49%)</title><rect x="416.1" y="229" width="5.8" height="15.0" fill="rgb(233,52,12)" rx="2" ry="2" />
<text  x="419.10" y="239.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (7 samples, 0.69%)</title><rect x="416.1" y="357" width="8.1" height="15.0" fill="rgb(235,228,12)" rx="2" ry="2" />
<text  x="419.10" y="367.5" ></text>
</g>
<g >
<title>_copy_to_iter (1 samples, 0.10%)</title><rect x="418.4" y="197" width="1.2" height="15.0" fill="rgb(207,24,51)" rx="2" ry="2" />
<text  x="421.42" y="207.5" ></text>
</g>
<g >
<title>copy_page_to_iter (3 samples, 0.29%)</title><rect x="418.4" y="213" width="3.5" height="15.0" fill="rgb(232,43,7)" rx="2" ry="2" />
<text  x="421.42" y="223.5" ></text>
</g>
<g >
<title>policy_nodemask (1 samples, 0.10%)</title><rect x="780.4" y="213" width="1.2" height="15.0" fill="rgb(245,161,2)" rx="2" ry="2" />
<text  x="783.42" y="223.5" ></text>
</g>
<g >
<title>tlb_batch_pages_flush (5 samples, 0.49%)</title><rect x="689.9" y="149" width="5.8" height="15.0" fill="rgb(253,70,29)" rx="2" ry="2" />
<text  x="692.92" y="159.5" ></text>
</g>
<g >
<title>rmqueue_bulk (1 samples, 0.10%)</title><rect x="779.3" y="149" width="1.1" height="15.0" fill="rgb(253,9,0)" rx="2" ry="2" />
<text  x="782.26" y="159.5" ></text>
</g>
<g >
<title>malloc (75 samples, 7.37%)</title><rect x="1056.6" y="389" width="87.0" height="15.0" fill="rgb(206,154,48)" rx="2" ry="2" />
<text  x="1059.57" y="399.5" >malloc</text>
</g>
<g >
<title>_ZN5alloc7raw_vec11finish_grow17hcf84e3e5105842b6E.llvm.7592651811759875389 (9 samples, 0.88%)</title><rect x="101.7" y="373" width="10.4" height="15.0" fill="rgb(216,186,25)" rx="2" ry="2" />
<text  x="104.66" y="383.5" ></text>
</g>
<g >
<title>visit_groups_merge.constprop.0.isra.0 (3 samples, 0.29%)</title><rect x="1185.4" y="117" width="3.4" height="15.0" fill="rgb(254,121,35)" rx="2" ry="2" />
<text  x="1188.36" y="127.5" ></text>
</g>
<g >
<title>folio_add_new_anon_rmap (3 samples, 0.29%)</title><rect x="782.7" y="261" width="3.5" height="15.0" fill="rgb(237,106,7)" rx="2" ry="2" />
<text  x="785.74" y="271.5" ></text>
</g>
<g >
<title>core::fmt::write (18 samples, 1.77%)</title><rect x="893.0" y="389" width="20.9" height="15.0" fill="rgb(249,99,13)" rx="2" ry="2" />
<text  x="895.97" y="399.5" ></text>
</g>
<g >
<title>native_write_msr (1 samples, 0.10%)</title><rect x="1188.8" y="101" width="1.2" height="15.0" fill="rgb(216,191,13)" rx="2" ry="2" />
<text  x="1191.84" y="111.5" ></text>
</g>
<g >
<title>unmap_page_range (8 samples, 0.79%)</title><rect x="686.4" y="213" width="9.3" height="15.0" fill="rgb(223,112,29)" rx="2" ry="2" />
<text  x="689.44" y="223.5" ></text>
</g>
<g >
<title>__mod_memcg_lruvec_state (1 samples, 0.10%)</title><rect x="531.0" y="197" width="1.1" height="15.0" fill="rgb(227,3,50)" rx="2" ry="2" />
<text  x="533.96" y="207.5" ></text>
</g>
<g >
<title>__free_one_page (2 samples, 0.20%)</title><rect x="1051.9" y="37" width="2.3" height="15.0" fill="rgb(222,33,23)" rx="2" ry="2" />
<text  x="1054.93" y="47.5" ></text>
</g>
<g >
<title>get_vma_policy (1 samples, 0.10%)</title><rect x="522.8" y="213" width="1.2" height="15.0" fill="rgb(252,226,9)" rx="2" ry="2" />
<text  x="525.84" y="223.5" ></text>
</g>
<g >
<title>__lruvec_stat_mod_folio (2 samples, 0.20%)</title><rect x="783.9" y="245" width="2.3" height="15.0" fill="rgb(238,159,6)" rx="2" ry="2" />
<text  x="786.90" y="255.5" ></text>
</g>
<g >
<title>up_read (1 samples, 0.10%)</title><rect x="788.5" y="341" width="1.2" height="15.0" fill="rgb(206,27,39)" rx="2" ry="2" />
<text  x="791.54" y="351.5" ></text>
</g>
<g >
<title>__lruvec_stat_mod_folio (1 samples, 0.10%)</title><rect x="531.0" y="229" width="1.1" height="15.0" fill="rgb(236,195,43)" rx="2" ry="2" />
<text  x="533.96" y="239.5" ></text>
</g>
<g >
<title>mem_cgroup_commit_charge (1 samples, 0.10%)</title><rect x="761.9" y="245" width="1.1" height="15.0" fill="rgb(222,123,25)" rx="2" ry="2" />
<text  x="764.86" y="255.5" ></text>
</g>
<g >
<title>do_syscall_64 (6 samples, 0.59%)</title><rect x="416.1" y="341" width="7.0" height="15.0" fill="rgb(245,127,5)" rx="2" ry="2" />
<text  x="419.10" y="351.5" ></text>
</g>
<g >
<title>mmput (8 samples, 0.79%)</title><rect x="1047.3" y="277" width="9.3" height="15.0" fill="rgb(216,109,20)" rx="2" ry="2" />
<text  x="1050.29" y="287.5" ></text>
</g>
<g >
<title>__rust_dealloc (6 samples, 0.59%)</title><rect x="164.3" y="373" width="7.0" height="15.0" fill="rgb(229,59,19)" rx="2" ry="2" />
<text  x="167.32" y="383.5" ></text>
</g>
<g >
<title>alloc_anon_folio (11 samples, 1.08%)</title><rect x="511.2" y="245" width="12.8" height="15.0" fill="rgb(208,71,2)" rx="2" ry="2" />
<text  x="514.24" y="255.5" ></text>
</g>
<g >
<title>clear_page_rep (4 samples, 0.39%)</title><rect x="514.7" y="165" width="4.7" height="15.0" fill="rgb(237,24,52)" rx="2" ry="2" />
<text  x="517.72" y="175.5" ></text>
</g>
<g >
<title>unmap_single_vma (8 samples, 0.79%)</title><rect x="686.4" y="229" width="9.3" height="15.0" fill="rgb(241,36,22)" rx="2" ry="2" />
<text  x="689.44" y="239.5" ></text>
</g>
<g >
<title>__mem_cgroup_charge (7 samples, 0.69%)</title><rect x="502.0" y="245" width="8.1" height="15.0" fill="rgb(234,15,32)" rx="2" ry="2" />
<text  x="504.96" y="255.5" ></text>
</g>
<g >
<title>__rust_alloc (15 samples, 1.47%)</title><rect x="146.9" y="373" width="17.4" height="15.0" fill="rgb(225,227,13)" rx="2" ry="2" />
<text  x="149.91" y="383.5" ></text>
</g>
<g >
<title>folio_add_lru (5 samples, 0.49%)</title><rect x="524.0" y="229" width="5.8" height="15.0" fill="rgb(211,129,20)" rx="2" ry="2" />
<text  x="527.00" y="239.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (1 samples, 0.10%)</title><rect x="531.0" y="213" width="1.1" height="15.0" fill="rgb(215,97,45)" rx="2" ry="2" />
<text  x="533.96" y="223.5" ></text>
</g>
<g >
<title>perf_ibs_add (2 samples, 0.20%)</title><rect x="850.0" y="165" width="2.4" height="15.0" fill="rgb(214,118,35)" rx="2" ry="2" />
<text  x="853.04" y="175.5" ></text>
</g>
<g >
<title>exc_page_fault (1 samples, 0.10%)</title><rect x="539.1" y="357" width="1.1" height="15.0" fill="rgb(253,194,1)" rx="2" ry="2" />
<text  x="542.09" y="367.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.10%)</title><rect x="1184.2" y="325" width="1.2" height="15.0" fill="rgb(210,165,28)" rx="2" ry="2" />
<text  x="1187.20" y="335.5" ></text>
</g>
<g >
<title>get_mem_cgroup_from_mm (2 samples, 0.20%)</title><rect x="503.1" y="229" width="2.3" height="15.0" fill="rgb(231,34,4)" rx="2" ry="2" />
<text  x="506.12" y="239.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (20 samples, 1.97%)</title><rect x="789.7" y="389" width="23.2" height="15.0" fill="rgb(237,23,28)" rx="2" ry="2" />
<text  x="792.71" y="399.5" >c..</text>
</g>
<g >
<title>release_pages (6 samples, 0.59%)</title><rect x="1049.6" y="101" width="7.0" height="15.0" fill="rgb(234,182,52)" rx="2" ry="2" />
<text  x="1052.61" y="111.5" ></text>
</g>
<g >
<title>core::slice::memchr::memchr_aligned (66 samples, 6.49%)</title><rect x="264.1" y="373" width="76.6" height="15.0" fill="rgb(241,8,49)" rx="2" ry="2" />
<text  x="267.10" y="383.5" >core::sl..</text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (9 samples, 0.88%)</title><rect x="221.2" y="373" width="10.4" height="15.0" fill="rgb(227,135,16)" rx="2" ry="2" />
<text  x="224.17" y="383.5" ></text>
</g>
<g >
<title>unmap_page_range (8 samples, 0.79%)</title><rect x="1047.3" y="197" width="9.3" height="15.0" fill="rgb(241,198,10)" rx="2" ry="2" />
<text  x="1050.29" y="207.5" ></text>
</g>
<g >
<title>unmap_vmas (8 samples, 0.79%)</title><rect x="686.4" y="245" width="9.3" height="15.0" fill="rgb(224,39,4)" rx="2" ry="2" />
<text  x="689.44" y="255.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (27 samples, 2.65%)</title><rect x="37.8" y="389" width="31.4" height="15.0" fill="rgb(213,124,11)" rx="2" ry="2" />
<text  x="40.85" y="399.5" >&lt;c..</text>
</g>
<g >
<title>srso_safe_ret (1 samples, 0.10%)</title><rect x="694.6" y="101" width="1.1" height="15.0" fill="rgb(206,16,43)" rx="2" ry="2" />
<text  x="697.56" y="111.5" ></text>
</g>
<g >
<title>__mod_zone_page_state (1 samples, 0.10%)</title><rect x="1055.4" y="69" width="1.2" height="15.0" fill="rgb(212,18,11)" rx="2" ry="2" />
<text  x="1058.41" y="79.5" ></text>
</g>
<g >
<title>core::num::dec2flt::parse::parse_number (30 samples, 2.95%)</title><rect x="971.9" y="389" width="34.8" height="15.0" fill="rgb(207,213,51)" rx="2" ry="2" />
<text  x="974.87" y="399.5" >co..</text>
</g>
<g >
<title>ctx_groups_sched_in (3 samples, 0.29%)</title><rect x="1185.4" y="133" width="3.4" height="15.0" fill="rgb(208,113,53)" rx="2" ry="2" />
<text  x="1188.36" y="143.5" ></text>
</g>
<g >
<title>__x64_sys_exit_group (8 samples, 0.79%)</title><rect x="1047.3" y="341" width="9.3" height="15.0" fill="rgb(221,114,11)" rx="2" ry="2" />
<text  x="1050.29" y="351.5" ></text>
</g>
<g >
<title>unmap_region (8 samples, 0.79%)</title><rect x="686.4" y="261" width="9.3" height="15.0" fill="rgb(232,228,26)" rx="2" ry="2" />
<text  x="689.44" y="271.5" ></text>
</g>
<g >
<title>_int_free (13 samples, 1.28%)</title><rect x="700.4" y="389" width="15.0" height="15.0" fill="rgb(226,178,47)" rx="2" ry="2" />
<text  x="703.36" y="399.5" ></text>
</g>
<g >
<title>begin_new_exec (4 samples, 0.39%)</title><rect x="1185.4" y="213" width="4.6" height="15.0" fill="rgb(246,6,49)" rx="2" ry="2" />
<text  x="1188.36" y="223.5" ></text>
</g>
<g >
<title>folio_add_new_anon_rmap (2 samples, 0.20%)</title><rect x="529.8" y="245" width="2.3" height="15.0" fill="rgb(205,134,7)" rx="2" ry="2" />
<text  x="532.80" y="255.5" ></text>
</g>
<g >
<title>__rcu_read_lock (1 samples, 0.10%)</title><rect x="533.3" y="245" width="1.1" height="15.0" fill="rgb(213,81,52)" rx="2" ry="2" />
<text  x="536.28" y="255.5" ></text>
</g>
<g >
<title>exc_page_fault (1 samples, 0.10%)</title><rect x="1184.2" y="357" width="1.2" height="15.0" fill="rgb(225,80,38)" rx="2" ry="2" />
<text  x="1187.20" y="367.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (8 samples, 0.79%)</title><rect x="686.4" y="373" width="9.3" height="15.0" fill="rgb(222,38,9)" rx="2" ry="2" />
<text  x="689.44" y="383.5" ></text>
</g>
<g >
<title>mem_cgroup_commit_charge (3 samples, 0.29%)</title><rect x="505.4" y="229" width="3.5" height="15.0" fill="rgb(228,41,29)" rx="2" ry="2" />
<text  x="508.44" y="239.5" ></text>
</g>
<g >
<title>alloc_pages_mpol (15 samples, 1.47%)</title><rect x="764.2" y="229" width="17.4" height="15.0" fill="rgb(205,181,43)" rx="2" ry="2" />
<text  x="767.18" y="239.5" ></text>
</g>
<g >
<title>_compound_head (1 samples, 0.10%)</title><rect x="686.4" y="181" width="1.2" height="15.0" fill="rgb(217,75,28)" rx="2" ry="2" />
<text  x="689.44" y="191.5" ></text>
</g>
<g >
<title>free_pcppages_bulk (1 samples, 0.10%)</title><rect x="691.1" y="69" width="1.1" height="15.0" fill="rgb(227,98,31)" rx="2" ry="2" />
<text  x="694.08" y="79.5" ></text>
</g>
<g >
<title>handle_mm_fault (27 samples, 2.65%)</title><rect x="754.9" y="325" width="31.3" height="15.0" fill="rgb(243,76,17)" rx="2" ry="2" />
<text  x="757.90" y="335.5" >ha..</text>
</g>
<g >
<title>srso_safe_ret (1 samples, 0.10%)</title><rect x="521.7" y="165" width="1.1" height="15.0" fill="rgb(223,105,25)" rx="2" ry="2" />
<text  x="524.68" y="175.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.39%)</title><rect x="1185.4" y="373" width="4.6" height="15.0" fill="rgb(232,102,52)" rx="2" ry="2" />
<text  x="1188.36" y="383.5" ></text>
</g>
<g >
<title>x64_sys_call (8 samples, 0.79%)</title><rect x="686.4" y="341" width="9.3" height="15.0" fill="rgb(215,161,53)" rx="2" ry="2" />
<text  x="689.44" y="351.5" ></text>
</g>
<g >
<title>exc_page_fault (31 samples, 3.05%)</title><rect x="753.7" y="357" width="36.0" height="15.0" fill="rgb(251,7,2)" rx="2" ry="2" />
<text  x="756.74" y="367.5" >exc..</text>
</g>
<g >
<title>bprm_execve.part.0 (4 samples, 0.39%)</title><rect x="1185.4" y="277" width="4.6" height="15.0" fill="rgb(252,28,48)" rx="2" ry="2" />
<text  x="1188.36" y="287.5" ></text>
</g>
<g >
<title>ctx_sched_in (3 samples, 0.29%)</title><rect x="1185.4" y="149" width="3.4" height="15.0" fill="rgb(205,206,52)" rx="2" ry="2" />
<text  x="1188.36" y="159.5" ></text>
</g>
<g >
<title>do_anonymous_page (33 samples, 3.24%)</title><rect x="493.8" y="261" width="38.3" height="15.0" fill="rgb(252,101,15)" rx="2" ry="2" />
<text  x="496.83" y="271.5" >do_..</text>
</g>
<g >
<title>get_page_from_freelist (11 samples, 1.08%)</title><rect x="767.7" y="197" width="12.7" height="15.0" fill="rgb(219,141,32)" rx="2" ry="2" />
<text  x="770.66" y="207.5" ></text>
</g>
<g >
<title>folio_add_new_anon_rmap (1 samples, 0.10%)</title><rect x="532.1" y="261" width="1.2" height="15.0" fill="rgb(249,214,51)" rx="2" ry="2" />
<text  x="535.12" y="271.5" ></text>
</g>
<g >
<title>perf_pmu_nop_int (3 samples, 0.29%)</title><rect x="1185.4" y="101" width="3.4" height="15.0" fill="rgb(209,19,29)" rx="2" ry="2" />
<text  x="1188.36" y="111.5" ></text>
</g>
<g >
<title>rw_verify_area (1 samples, 0.10%)</title><rect x="421.9" y="261" width="1.2" height="15.0" fill="rgb(245,8,42)" rx="2" ry="2" />
<text  x="424.90" y="271.5" ></text>
</g>
<g >
<title>__x64_sys_read (6 samples, 0.59%)</title><rect x="416.1" y="309" width="7.0" height="15.0" fill="rgb(206,190,23)" rx="2" ry="2" />
<text  x="419.10" y="319.5" ></text>
</g>
<g >
<title>do_group_exit (8 samples, 0.79%)</title><rect x="1047.3" y="325" width="9.3" height="15.0" fill="rgb(231,167,46)" rx="2" ry="2" />
<text  x="1050.29" y="335.5" ></text>
</g>
<g >
<title>perf_event_update_userpage (2 samples, 0.20%)</title><rect x="850.0" y="133" width="2.4" height="15.0" fill="rgb(236,72,31)" rx="2" ry="2" />
<text  x="853.04" y="143.5" ></text>
</g>
<g >
<title>read (8 samples, 0.79%)</title><rect x="416.1" y="373" width="9.3" height="15.0" fill="rgb(209,160,10)" rx="2" ry="2" />
<text  x="419.10" y="383.5" ></text>
</g>
<g >
<title>free_pcppages_bulk (2 samples, 0.20%)</title><rect x="1051.9" y="53" width="2.3" height="15.0" fill="rgb(243,212,17)" rx="2" ry="2" />
<text  x="1054.93" y="63.5" ></text>
</g>
<g >
<title>do_syscall_64 (4 samples, 0.39%)</title><rect x="1185.4" y="357" width="4.6" height="15.0" fill="rgb(232,170,52)" rx="2" ry="2" />
<text  x="1188.36" y="367.5" ></text>
</g>
<g >
<title>merge_sched_in (3 samples, 0.29%)</title><rect x="848.9" y="197" width="3.5" height="15.0" fill="rgb(240,23,6)" rx="2" ry="2" />
<text  x="851.88" y="207.5" ></text>
</g>
<g >
<title>x64_sys_call (4 samples, 0.39%)</title><rect x="1185.4" y="341" width="4.6" height="15.0" fill="rgb(220,182,15)" rx="2" ry="2" />
<text  x="1188.36" y="351.5" ></text>
</g>
<g >
<title>__rdl_dealloc (1 samples, 0.10%)</title><rect x="145.8" y="373" width="1.1" height="15.0" fill="rgb(247,70,51)" rx="2" ry="2" />
<text  x="148.75" y="383.5" ></text>
</g>
<g >
<title>schedule (3 samples, 0.29%)</title><rect x="848.9" y="309" width="3.5" height="15.0" fill="rgb(207,90,43)" rx="2" ry="2" />
<text  x="851.88" y="319.5" ></text>
</g>
<g >
<title>__alloc_pages (1 samples, 0.10%)</title><rect x="1184.2" y="213" width="1.2" height="15.0" fill="rgb(207,165,36)" rx="2" ry="2" />
<text  x="1187.20" y="223.5" ></text>
</g>
<g >
<title>irqentry_exit_to_user_mode (2 samples, 0.20%)</title><rect x="786.2" y="325" width="2.3" height="15.0" fill="rgb(234,204,48)" rx="2" ry="2" />
<text  x="789.22" y="335.5" ></text>
</g>
<g >
<title>unmap_single_vma (8 samples, 0.79%)</title><rect x="1047.3" y="213" width="9.3" height="15.0" fill="rgb(243,94,30)" rx="2" ry="2" />
<text  x="1050.29" y="223.5" ></text>
</g>
<g >
<title>_int_malloc (64 samples, 6.29%)</title><rect x="715.4" y="389" width="74.3" height="15.0" fill="rgb(217,63,27)" rx="2" ry="2" />
<text  x="718.45" y="399.5" >_int_mal..</text>
</g>
<g >
<title>core::str::converts::from_utf8 (30 samples, 2.95%)</title><rect x="369.7" y="373" width="34.8" height="15.0" fill="rgb(214,224,12)" rx="2" ry="2" />
<text  x="372.69" y="383.5" >co..</text>
</g>
<g >
<title>asm_exc_page_fault (44 samples, 4.33%)</title><rect x="488.0" y="357" width="51.1" height="15.0" fill="rgb(228,53,7)" rx="2" ry="2" />
<text  x="491.03" y="367.5" >asm_e..</text>
</g>
<g >
<title>__rust_alloc (2 samples, 0.20%)</title><rect x="696.9" y="389" width="2.3" height="15.0" fill="rgb(225,59,20)" rx="2" ry="2" />
<text  x="699.88" y="399.5" ></text>
</g>
<g >
<title>tlb_flush_mmu (5 samples, 0.49%)</title><rect x="689.9" y="165" width="5.8" height="15.0" fill="rgb(211,194,12)" rx="2" ry="2" />
<text  x="692.92" y="175.5" ></text>
</g>
<g >
<title>__x64_sys_execve (4 samples, 0.39%)</title><rect x="1185.4" y="325" width="4.6" height="15.0" fill="rgb(249,229,4)" rx="2" ry="2" />
<text  x="1188.36" y="335.5" ></text>
</g>
<g >
<title>tlb_flush_mmu (6 samples, 0.59%)</title><rect x="1049.6" y="149" width="7.0" height="15.0" fill="rgb(212,134,15)" rx="2" ry="2" />
<text  x="1052.61" y="159.5" ></text>
</g>
<g >
<title>folio_add_lru (1 samples, 0.10%)</title><rect x="781.6" y="245" width="1.1" height="15.0" fill="rgb(237,90,36)" rx="2" ry="2" />
<text  x="784.58" y="255.5" ></text>
</g>
<g >
<title>x64_sys_call (1 samples, 0.10%)</title><rect x="423.1" y="341" width="1.1" height="15.0" fill="rgb(222,129,45)" rx="2" ry="2" />
<text  x="426.06" y="351.5" ></text>
</g>
<g >
<title>folio_add_lru_vma (1 samples, 0.10%)</title><rect x="781.6" y="261" width="1.1" height="15.0" fill="rgb(244,209,34)" rx="2" ry="2" />
<text  x="784.58" y="271.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (1 samples, 0.10%)</title><rect x="699.2" y="357" width="1.2" height="15.0" fill="rgb(249,219,2)" rx="2" ry="2" />
<text  x="702.20" y="367.5" ></text>
</g>
<g >
<title>alloc_pages_mpol (9 samples, 0.88%)</title><rect x="512.4" y="213" width="10.4" height="15.0" fill="rgb(248,115,3)" rx="2" ry="2" />
<text  x="515.40" y="223.5" ></text>
</g>
<g >
<title>lock_vma_under_rcu (3 samples, 0.29%)</title><rect x="535.6" y="309" width="3.5" height="15.0" fill="rgb(245,172,53)" rx="2" ry="2" />
<text  x="538.60" y="319.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (5 samples, 0.49%)</title><rect x="136.5" y="373" width="5.8" height="15.0" fill="rgb(222,14,38)" rx="2" ry="2" />
<text  x="139.47" y="383.5" ></text>
</g>
<g >
<title>srso_safe_ret (1 samples, 0.10%)</title><rect x="699.2" y="325" width="1.2" height="15.0" fill="rgb(236,93,36)" rx="2" ry="2" />
<text  x="702.20" y="335.5" ></text>
</g>
<g >
<title>apparmor_file_permission (1 samples, 0.10%)</title><rect x="421.9" y="229" width="1.2" height="15.0" fill="rgb(227,138,46)" rx="2" ry="2" />
<text  x="424.90" y="239.5" ></text>
</g>
<g >
<title>core::fmt::Formatter::pad_integral::write_prefix (7 samples, 0.69%)</title><rect x="840.8" y="389" width="8.1" height="15.0" fill="rgb(219,211,15)" rx="2" ry="2" />
<text  x="843.76" y="399.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (31 samples, 3.05%)</title><rect x="753.7" y="373" width="36.0" height="15.0" fill="rgb(229,5,36)" rx="2" ry="2" />
<text  x="756.74" y="383.5" >asm..</text>
</g>
<g >
<title>zap_pmd_range.isra.0 (8 samples, 0.79%)</title><rect x="1047.3" y="181" width="9.3" height="15.0" fill="rgb(223,137,51)" rx="2" ry="2" />
<text  x="1050.29" y="191.5" ></text>
</g>
<g >
<title>do_syscall_64 (8 samples, 0.79%)</title><rect x="686.4" y="357" width="9.3" height="15.0" fill="rgb(230,76,31)" rx="2" ry="2" />
<text  x="689.44" y="367.5" ></text>
</g>
<g >
<title>__count_memcg_events (2 samples, 0.20%)</title><rect x="506.6" y="213" width="2.3" height="15.0" fill="rgb(213,71,47)" rx="2" ry="2" />
<text  x="509.60" y="223.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (3 samples, 0.29%)</title><rect x="848.9" y="261" width="3.5" height="15.0" fill="rgb(218,6,26)" rx="2" ry="2" />
<text  x="851.88" y="271.5" ></text>
</g>
<g >
<title>alloc_anon_folio (1 samples, 0.10%)</title><rect x="1184.2" y="261" width="1.2" height="15.0" fill="rgb(233,142,13)" rx="2" ry="2" />
<text  x="1187.20" y="271.5" ></text>
</g>
<g >
<title>x64_sys_call (8 samples, 0.79%)</title><rect x="1047.3" y="357" width="9.3" height="15.0" fill="rgb(227,169,7)" rx="2" ry="2" />
<text  x="1050.29" y="367.5" ></text>
</g>
<g >
<title>lru_add_fn (4 samples, 0.39%)</title><rect x="525.2" y="197" width="4.6" height="15.0" fill="rgb(228,192,50)" rx="2" ry="2" />
<text  x="528.16" y="207.5" ></text>
</g>
<g >
<title>do_anonymous_page (25 samples, 2.46%)</title><rect x="757.2" y="277" width="29.0" height="15.0" fill="rgb(226,49,19)" rx="2" ry="2" />
<text  x="760.22" y="287.5" >do..</text>
</g>
<g >
<title>vfs_read (6 samples, 0.59%)</title><rect x="416.1" y="277" width="7.0" height="15.0" fill="rgb(243,19,2)" rx="2" ry="2" />
<text  x="419.10" y="287.5" ></text>
</g>
<g >
<title>_dl_start_user (1 samples, 0.10%)</title><rect x="699.2" y="389" width="1.2" height="15.0" fill="rgb(208,164,44)" rx="2" ry="2" />
<text  x="702.20" y="399.5" ></text>
</g>
<g >
<title>__handle_mm_fault (36 samples, 3.54%)</title><rect x="492.7" y="293" width="41.7" height="15.0" fill="rgb(222,145,16)" rx="2" ry="2" />
<text  x="495.67" y="303.5" >__h..</text>
</g>
<g >
<title>count_memcg_events.constprop.0 (1 samples, 0.10%)</title><rect x="534.4" y="293" width="1.2" height="15.0" fill="rgb(235,8,5)" rx="2" ry="2" />
<text  x="537.44" y="303.5" ></text>
</g>
<g >
<title>release_pages (5 samples, 0.49%)</title><rect x="689.9" y="117" width="5.8" height="15.0" fill="rgb(240,211,10)" rx="2" ry="2" />
<text  x="692.92" y="127.5" ></text>
</g>
<g >
<title>rmqueue (2 samples, 0.20%)</title><rect x="519.4" y="165" width="2.3" height="15.0" fill="rgb(216,125,33)" rx="2" ry="2" />
<text  x="522.36" y="175.5" ></text>
</g>
<g >
<title>folio_remove_rmap_ptes (1 samples, 0.10%)</title><rect x="688.8" y="165" width="1.1" height="15.0" fill="rgb(237,33,31)" rx="2" ry="2" />
<text  x="691.76" y="175.5" ></text>
</g>
<g >
<title>handle_pte_fault (35 samples, 3.44%)</title><rect x="493.8" y="277" width="40.6" height="15.0" fill="rgb(216,17,39)" rx="2" ry="2" />
<text  x="496.83" y="287.5" >han..</text>
</g>
<g >
<title>perf_ctx_enable (1 samples, 0.10%)</title><rect x="1188.8" y="149" width="1.2" height="15.0" fill="rgb(251,17,1)" rx="2" ry="2" />
<text  x="1191.84" y="159.5" ></text>
</g>
<g >
<title>__rmqueue_pcplist (1 samples, 0.10%)</title><rect x="779.3" y="165" width="1.1" height="15.0" fill="rgb(225,92,37)" rx="2" ry="2" />
<text  x="782.26" y="175.5" ></text>
</g>
<g >
<title>perf_event_exec (4 samples, 0.39%)</title><rect x="1185.4" y="197" width="4.6" height="15.0" fill="rgb(229,120,31)" rx="2" ry="2" />
<text  x="1188.36" y="207.5" ></text>
</g>
<g >
<title>__mod_memcg_lruvec_state (1 samples, 0.10%)</title><rect x="528.6" y="149" width="1.2" height="15.0" fill="rgb(245,228,40)" rx="2" ry="2" />
<text  x="531.64" y="159.5" ></text>
</g>
<g >
<title>amd_pmu_enable_all (1 samples, 0.10%)</title><rect x="1188.8" y="117" width="1.2" height="15.0" fill="rgb(244,203,32)" rx="2" ry="2" />
<text  x="1191.84" y="127.5" ></text>
</g>
<g >
<title>do_execveat_common.isra.0 (4 samples, 0.39%)</title><rect x="1185.4" y="309" width="4.6" height="15.0" fill="rgb(220,93,39)" rx="2" ry="2" />
<text  x="1188.36" y="319.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (8 samples, 0.79%)</title><rect x="1047.3" y="389" width="9.3" height="15.0" fill="rgb(251,143,41)" rx="2" ry="2" />
<text  x="1050.29" y="399.5" ></text>
</g>
<g >
<title>__mem_cgroup_uncharge_list (1 samples, 0.10%)</title><rect x="689.9" y="101" width="1.2" height="15.0" fill="rgb(250,147,38)" rx="2" ry="2" />
<text  x="692.92" y="111.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.10%)</title><rect x="510.1" y="245" width="1.1" height="15.0" fill="rgb(225,1,52)" rx="2" ry="2" />
<text  x="513.08" y="255.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (2 samples, 0.20%)</title><rect x="692.2" y="85" width="2.4" height="15.0" fill="rgb(227,202,19)" rx="2" ry="2" />
<text  x="695.24" y="95.5" ></text>
</g>
<g >
<title>load_elf_binary (4 samples, 0.39%)</title><rect x="1185.4" y="229" width="4.6" height="15.0" fill="rgb(245,27,28)" rx="2" ry="2" />
<text  x="1188.36" y="239.5" ></text>
</g>
<g >
<title>irqentry_exit (3 samples, 0.29%)</title><rect x="848.9" y="341" width="3.5" height="15.0" fill="rgb(217,157,35)" rx="2" ry="2" />
<text  x="851.88" y="351.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 0.10%)</title><rect x="1184.2" y="309" width="1.2" height="15.0" fill="rgb(232,85,11)" rx="2" ry="2" />
<text  x="1187.20" y="319.5" ></text>
</g>
<g >
<title>__lruvec_stat_mod_folio (1 samples, 0.10%)</title><rect x="688.8" y="149" width="1.1" height="15.0" fill="rgb(241,211,13)" rx="2" ry="2" />
<text  x="691.76" y="159.5" ></text>
</g>
<g >
<title>core::fmt::Formatter::pad_integral (24 samples, 2.36%)</title><rect x="812.9" y="389" width="27.9" height="15.0" fill="rgb(211,82,37)" rx="2" ry="2" />
<text  x="815.91" y="399.5" >c..</text>
</g>
<g >
<title>tlb_batch_pages_flush (6 samples, 0.59%)</title><rect x="1049.6" y="133" width="7.0" height="15.0" fill="rgb(251,21,13)" rx="2" ry="2" />
<text  x="1052.61" y="143.5" ></text>
</g>
<g >
<title>_ZN90_$LT$core..str..iter..Split$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h8c9b056ba3e35defE.llvm.11672636211964375146 (20 samples, 1.97%)</title><rect x="112.1" y="373" width="23.2" height="15.0" fill="rgb(206,41,27)" rx="2" ry="2" />
<text  x="115.10" y="383.5" >_..</text>
</g>
<g >
<title>zap_pmd_range.isra.0 (8 samples, 0.79%)</title><rect x="686.4" y="197" width="9.3" height="15.0" fill="rgb(242,216,51)" rx="2" ry="2" />
<text  x="689.44" y="207.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (3 samples, 0.29%)</title><rect x="237.4" y="373" width="3.5" height="15.0" fill="rgb(227,175,15)" rx="2" ry="2" />
<text  x="240.41" y="383.5" ></text>
</g>
<g >
<title>__next_zones_zonelist (1 samples, 0.10%)</title><rect x="512.4" y="181" width="1.2" height="15.0" fill="rgb(241,124,16)" rx="2" ry="2" />
<text  x="515.40" y="191.5" ></text>
</g>
<g >
<title>x86_pmu_enable (1 samples, 0.10%)</title><rect x="1188.8" y="133" width="1.2" height="15.0" fill="rgb(246,25,48)" rx="2" ry="2" />
<text  x="1191.84" y="143.5" ></text>
</g>
<g >
<title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (6 samples, 0.59%)</title><rect x="10.0" y="389" width="7.0" height="15.0" fill="rgb(237,178,11)" rx="2" ry="2" />
<text  x="13.00" y="399.5" ></text>
</g>
<g >
<title>exit_mmap (8 samples, 0.79%)</title><rect x="1047.3" y="245" width="9.3" height="15.0" fill="rgb(243,189,31)" rx="2" ry="2" />
<text  x="1050.29" y="255.5" ></text>
</g>
<g >
<title>core::str::pattern::StrSearcher::new (28 samples, 2.75%)</title><rect x="1014.8" y="389" width="32.5" height="15.0" fill="rgb(225,21,1)" rx="2" ry="2" />
<text  x="1017.80" y="399.5" >co..</text>
</g>
<g >
<title>error_entry (1 samples, 0.10%)</title><rect x="424.2" y="357" width="1.2" height="15.0" fill="rgb(231,86,47)" rx="2" ry="2" />
<text  x="427.22" y="367.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (5 samples, 0.49%)</title><rect x="231.6" y="373" width="5.8" height="15.0" fill="rgb(220,44,28)" rx="2" ry="2" />
<text  x="234.61" y="383.5" ></text>
</g>
<g >
<title>irqentry_exit_to_user_mode (3 samples, 0.29%)</title><rect x="848.9" y="325" width="3.5" height="15.0" fill="rgb(234,190,16)" rx="2" ry="2" />
<text  x="851.88" y="335.5" ></text>
</g>
<g >
<title>uncharge_folio (1 samples, 0.10%)</title><rect x="1050.8" y="69" width="1.1" height="15.0" fill="rgb(222,43,41)" rx="2" ry="2" />
<text  x="1053.77" y="79.5" ></text>
</g>
<g >
<title>do_exit (8 samples, 0.79%)</title><rect x="1047.3" y="309" width="9.3" height="15.0" fill="rgb(238,163,48)" rx="2" ry="2" />
<text  x="1050.29" y="319.5" ></text>
</g>
<g >
<title>ctx_groups_sched_in (3 samples, 0.29%)</title><rect x="848.9" y="229" width="3.5" height="15.0" fill="rgb(231,153,54)" rx="2" ry="2" />
<text  x="851.88" y="239.5" ></text>
</g>
<g >
<title>cli (1,013 samples, 99.61%)</title><rect x="10.0" y="405" width="1175.4" height="15.0" fill="rgb(206,113,19)" rx="2" ry="2" />
<text  x="13.00" y="415.5" >cli</text>
</g>
<g >
<title>core::fmt::Formatter::pad_integral (3 samples, 0.29%)</title><rect x="848.9" y="389" width="3.5" height="15.0" fill="rgb(250,118,30)" rx="2" ry="2" />
<text  x="851.88" y="399.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned (1 samples, 0.10%)</title><rect x="135.3" y="373" width="1.2" height="15.0" fill="rgb(225,181,51)" rx="2" ry="2" />
<text  x="138.31" y="383.5" ></text>
</g>
<g >
<title>security_file_permission (1 samples, 0.10%)</title><rect x="421.9" y="245" width="1.2" height="15.0" fill="rgb(232,173,37)" rx="2" ry="2" />
<text  x="424.90" y="255.5" ></text>
</g>
<g >
<title>vma_alloc_folio (1 samples, 0.10%)</title><rect x="1184.2" y="245" width="1.2" height="15.0" fill="rgb(240,38,30)" rx="2" ry="2" />
<text  x="1187.20" y="255.5" ></text>
</g>
<g >
<title>handle_pte_fault (26 samples, 2.56%)</title><rect x="756.1" y="293" width="30.1" height="15.0" fill="rgb(227,214,48)" rx="2" ry="2" />
<text  x="759.06" y="303.5" >ha..</text>
</g>
<g >
<title>__schedule (3 samples, 0.29%)</title><rect x="848.9" y="293" width="3.5" height="15.0" fill="rgb(243,83,18)" rx="2" ry="2" />
<text  x="851.88" y="303.5" ></text>
</g>
<g >
<title>cgroup_rstat_updated (1 samples, 0.10%)</title><rect x="693.4" y="53" width="1.2" height="15.0" fill="rgb(253,130,31)" rx="2" ry="2" />
<text  x="696.40" y="63.5" ></text>
</g>
<g >
<title>folio_add_lru_vma (5 samples, 0.49%)</title><rect x="524.0" y="245" width="5.8" height="15.0" fill="rgb(226,45,52)" rx="2" ry="2" />
<text  x="527.00" y="255.5" ></text>
</g>
<g >
<title>_int_free (36 samples, 3.54%)</title><rect x="171.3" y="373" width="41.7" height="15.0" fill="rgb(212,38,39)" rx="2" ry="2" />
<text  x="174.28" y="383.5" >_in..</text>
</g>
<g >
<title>ext4_file_read_iter (5 samples, 0.49%)</title><rect x="416.1" y="261" width="5.8" height="15.0" fill="rgb(253,25,47)" rx="2" ry="2" />
<text  x="419.10" y="271.5" ></text>
</g>
<g >
<title>pte_offset_map_nolock (1 samples, 0.10%)</title><rect x="533.3" y="261" width="1.1" height="15.0" fill="rgb(244,207,7)" rx="2" ry="2" />
<text  x="536.28" y="271.5" ></text>
</g>
<g >
<title>__count_memcg_events (1 samples, 0.10%)</title><rect x="761.9" y="229" width="1.1" height="15.0" fill="rgb(246,153,47)" rx="2" ry="2" />
<text  x="764.86" y="239.5" ></text>
</g>
<g >
<title>zap_pte_range (7 samples, 0.69%)</title><rect x="687.6" y="181" width="8.1" height="15.0" fill="rgb(218,170,53)" rx="2" ry="2" />
<text  x="690.60" y="191.5" ></text>
</g>
<g >
<title>down_read_trylock (1 samples, 0.10%)</title><rect x="490.4" y="309" width="1.1" height="15.0" fill="rgb(249,188,38)" rx="2" ry="2" />
<text  x="493.35" y="319.5" ></text>
</g>
<g >
<title>handle_mm_fault (38 samples, 3.74%)</title><rect x="491.5" y="309" width="44.1" height="15.0" fill="rgb(242,78,51)" rx="2" ry="2" />
<text  x="494.51" y="319.5" >hand..</text>
</g>
<g >
<title>core::num::dec2flt::&lt;impl core::str::traits::FromStr for f64&gt;::from_str (24 samples, 2.36%)</title><rect x="944.0" y="389" width="27.9" height="15.0" fill="rgb(239,2,28)" rx="2" ry="2" />
<text  x="947.02" y="399.5" >c..</text>
</g>
<g >
<title>cgroup_rstat_updated (1 samples, 0.10%)</title><rect x="531.0" y="181" width="1.1" height="15.0" fill="rgb(219,139,18)" rx="2" ry="2" />
<text  x="533.96" y="191.5" ></text>
</g>
<g >
<title>__mmput (8 samples, 0.79%)</title><rect x="1047.3" y="261" width="9.3" height="15.0" fill="rgb(218,61,28)" rx="2" ry="2" />
<text  x="1050.29" y="271.5" ></text>
</g>
<g >
<title>__mem_cgroup_charge (3 samples, 0.29%)</title><rect x="760.7" y="261" width="3.5" height="15.0" fill="rgb(212,25,24)" rx="2" ry="2" />
<text  x="763.70" y="271.5" ></text>
</g>
<g >
<title>do_user_addr_fault (42 samples, 4.13%)</title><rect x="490.4" y="325" width="48.7" height="15.0" fill="rgb(234,12,44)" rx="2" ry="2" />
<text  x="493.35" y="335.5" >do_u..</text>
</g>
<g >
<title>finish_task_switch.isra.0 (3 samples, 0.29%)</title><rect x="848.9" y="277" width="3.5" height="15.0" fill="rgb(209,187,44)" rx="2" ry="2" />
<text  x="851.88" y="287.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (1 samples, 0.10%)</title><rect x="524.0" y="197" width="1.2" height="15.0" fill="rgb(225,98,17)" rx="2" ry="2" />
<text  x="527.00" y="207.5" ></text>
</g>
<g >
<title>irqentry_exit (2 samples, 0.20%)</title><rect x="786.2" y="341" width="2.3" height="15.0" fill="rgb(254,224,44)" rx="2" ry="2" />
<text  x="789.22" y="351.5" ></text>
</g>
<g >
<title>unmap_vmas (8 samples, 0.79%)</title><rect x="1047.3" y="229" width="9.3" height="15.0" fill="rgb(215,78,24)" rx="2" ry="2" />
<text  x="1050.29" y="239.5" ></text>
</g>
<g >
<title>_dl_start (1 samples, 0.10%)</title><rect x="699.2" y="373" width="1.2" height="15.0" fill="rgb(237,120,20)" rx="2" ry="2" />
<text  x="702.20" y="383.5" ></text>
</g>
<g >
<title>do_vmi_align_munmap (8 samples, 0.79%)</title><rect x="686.4" y="277" width="9.3" height="15.0" fill="rgb(245,110,35)" rx="2" ry="2" />
<text  x="689.44" y="287.5" ></text>
</g>
<g >
<title>do_user_addr_fault (28 samples, 2.75%)</title><rect x="753.7" y="341" width="32.5" height="15.0" fill="rgb(207,124,3)" rx="2" ry="2" />
<text  x="756.74" y="351.5" >do..</text>
</g>
<g >
<title>__mod_lruvec_state (2 samples, 0.20%)</title><rect x="527.5" y="165" width="2.3" height="15.0" fill="rgb(245,150,47)" rx="2" ry="2" />
<text  x="530.48" y="175.5" ></text>
</g>
<g >
<title>_ZN90_$LT$core..str..iter..Split$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h8c9b056ba3e35defE.llvm.11672636211964375146 (48 samples, 4.72%)</title><rect x="590.1" y="389" width="55.7" height="15.0" fill="rgb(213,104,23)" rx="2" ry="2" />
<text  x="593.14" y="399.5" >_ZN90..</text>
</g>
<g >
<title>__free_one_page (1 samples, 0.10%)</title><rect x="691.1" y="53" width="1.1" height="15.0" fill="rgb(220,94,17)" rx="2" ry="2" />
<text  x="694.08" y="63.5" ></text>
</g>
<g >
<title>core::fmt::write (17 samples, 1.67%)</title><rect x="240.9" y="373" width="19.7" height="15.0" fill="rgb(215,74,13)" rx="2" ry="2" />
<text  x="243.89" y="383.5" ></text>
</g>
<g >
<title>lru_gen_del_folio.constprop.0 (2 samples, 0.20%)</title><rect x="692.2" y="101" width="2.4" height="15.0" fill="rgb(227,90,25)" rx="2" ry="2" />
<text  x="695.24" y="111.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (1 samples, 0.10%)</title><rect x="1184.2" y="373" width="1.2" height="15.0" fill="rgb(247,6,41)" rx="2" ry="2" />
<text  x="1187.20" y="383.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (6 samples, 0.59%)</title><rect x="679.5" y="389" width="6.9" height="15.0" fill="rgb(211,26,51)" rx="2" ry="2" />
<text  x="682.48" y="399.5" ></text>
</g>
<g >
<title>core::hash::BuildHasher::hash_one (26 samples, 2.56%)</title><rect x="913.9" y="389" width="30.1" height="15.0" fill="rgb(223,146,8)" rx="2" ry="2" />
<text  x="916.85" y="399.5" >co..</text>
</g>
<g >
<title>rmqueue (1 samples, 0.10%)</title><rect x="779.3" y="181" width="1.1" height="15.0" fill="rgb(219,27,50)" rx="2" ry="2" />
<text  x="782.26" y="191.5" ></text>
</g>
<g >
<title>std::io::append_to_string (15 samples, 1.47%)</title><rect x="547.2" y="373" width="17.4" height="15.0" fill="rgb(245,40,49)" rx="2" ry="2" />
<text  x="550.21" y="383.5" ></text>
</g>
<g >
<title>__folio_throttle_swaprate (1 samples, 0.10%)</title><rect x="759.5" y="261" width="1.2" height="15.0" fill="rgb(239,26,8)" rx="2" ry="2" />
<text  x="762.54" y="271.5" ></text>
</g>
<g >
<title>__rdl_dealloc (1 samples, 0.10%)</title><rect x="695.7" y="389" width="1.2" height="15.0" fill="rgb(210,144,8)" rx="2" ry="2" />
<text  x="698.72" y="399.5" ></text>
</g>
<g >
<title>[unknown] (449 samples, 44.15%)</title><rect x="69.2" y="389" width="520.9" height="15.0" fill="rgb(221,146,38)" rx="2" ry="2" />
<text  x="72.17" y="399.5" >[unknown]</text>
</g>
<g >
<title>do_syscall_64 (8 samples, 0.79%)</title><rect x="1047.3" y="373" width="9.3" height="15.0" fill="rgb(220,3,26)" rx="2" ry="2" />
<text  x="1050.29" y="383.5" ></text>
</g>
<g >
<title>search_binary_handler (4 samples, 0.39%)</title><rect x="1185.4" y="245" width="4.6" height="15.0" fill="rgb(252,51,15)" rx="2" ry="2" />
<text  x="1188.36" y="255.5" ></text>
</g>
<g >
<title>exc_page_fault (1 samples, 0.10%)</title><rect x="699.2" y="341" width="1.2" height="15.0" fill="rgb(234,212,42)" rx="2" ry="2" />
<text  x="702.20" y="351.5" ></text>
</g>
<g >
<title>__mod_memcg_lruvec_state (1 samples, 0.10%)</title><rect x="783.9" y="213" width="1.2" height="15.0" fill="rgb(207,85,12)" rx="2" ry="2" />
<text  x="786.90" y="223.5" ></text>
</g>
<g >
<title>memcg_check_events (1 samples, 0.10%)</title><rect x="763.0" y="245" width="1.2" height="15.0" fill="rgb(214,209,15)" rx="2" ry="2" />
<text  x="766.02" y="255.5" ></text>
</g>
<g >
<title>exc_page_fault (42 samples, 4.13%)</title><rect x="490.4" y="341" width="48.7" height="15.0" fill="rgb(232,89,52)" rx="2" ry="2" />
<text  x="493.35" y="351.5" >exc_..</text>
</g>
<g >
<title>alloc::fmt::format::format_inner (7 samples, 0.69%)</title><rect x="213.0" y="373" width="8.2" height="15.0" fill="rgb(245,120,28)" rx="2" ry="2" />
<text  x="216.05" y="383.5" ></text>
</g>
<g >
<title>all (1,017 samples, 100%)</title><rect x="10.0" y="421" width="1180.0" height="15.0" fill="rgb(213,20,18)" rx="2" ry="2" />
<text  x="13.00" y="431.5" ></text>
</g>
<g >
<title>core::str::pattern::StrSearcher::new (5 samples, 0.49%)</title><rect x="404.5" y="373" width="5.8" height="15.0" fill="rgb(216,13,21)" rx="2" ry="2" />
<text  x="407.49" y="383.5" ></text>
</g>
<g >
<title>core::num::dec2flt::&lt;impl core::str::traits::FromStr for f64&gt;::from_str (3 samples, 0.29%)</title><rect x="260.6" y="373" width="3.5" height="15.0" fill="rgb(239,151,0)" rx="2" ry="2" />
<text  x="263.62" y="383.5" ></text>
</g>
<g >
<title>visit_groups_merge.constprop.0.isra.0 (3 samples, 0.29%)</title><rect x="848.9" y="213" width="3.5" height="15.0" fill="rgb(220,192,44)" rx="2" ry="2" />
<text  x="851.88" y="223.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;stats::table::Table&gt; (5 samples, 0.49%)</title><rect x="1006.7" y="389" width="5.8" height="15.0" fill="rgb(254,14,18)" rx="2" ry="2" />
<text  x="1009.68" y="399.5" ></text>
</g>
<g >
<title>alloc_anon_folio (15 samples, 1.47%)</title><rect x="764.2" y="261" width="17.4" height="15.0" fill="rgb(254,174,21)" rx="2" ry="2" />
<text  x="767.18" y="271.5" ></text>
</g>
<g >
<title>folio_batch_move_lru (5 samples, 0.49%)</title><rect x="524.0" y="213" width="5.8" height="15.0" fill="rgb(212,20,6)" rx="2" ry="2" />
<text  x="527.00" y="223.5" ></text>
</g>
<g >
<title>__munmap (8 samples, 0.79%)</title><rect x="686.4" y="389" width="9.3" height="15.0" fill="rgb(253,121,4)" rx="2" ry="2" />
<text  x="689.44" y="399.5" ></text>
</g>
<g >
<title>zap_pte_range (8 samples, 0.79%)</title><rect x="1047.3" y="165" width="9.3" height="15.0" fill="rgb(241,82,41)" rx="2" ry="2" />
<text  x="1050.29" y="175.5" ></text>
</g>
<g >
<title>do_vmi_munmap (8 samples, 0.79%)</title><rect x="686.4" y="293" width="9.3" height="15.0" fill="rgb(214,145,2)" rx="2" ry="2" />
<text  x="689.44" y="303.5" ></text>
</g>
<g >
<title>__vm_munmap (8 samples, 0.79%)</title><rect x="686.4" y="309" width="9.3" height="15.0" fill="rgb(252,50,0)" rx="2" ry="2" />
<text  x="689.44" y="319.5" ></text>
</g>
<g >
<title>ctx_sched_in (3 samples, 0.29%)</title><rect x="848.9" y="245" width="3.5" height="15.0" fill="rgb(241,121,37)" rx="2" ry="2" />
<text  x="851.88" y="255.5" ></text>
</g>
<g >
<title>malloc (5 samples, 0.49%)</title><rect x="410.3" y="373" width="5.8" height="15.0" fill="rgb(251,166,45)" rx="2" ry="2" />
<text  x="413.29" y="383.5" ></text>
</g>
<g >
<title>try_charge_memcg (1 samples, 0.10%)</title><rect x="508.9" y="229" width="1.2" height="15.0" fill="rgb(218,68,32)" rx="2" ry="2" />
<text  x="511.92" y="239.5" ></text>
</g>
<g >
<title>get_page_from_freelist (8 samples, 0.79%)</title><rect x="513.6" y="181" width="9.2" height="15.0" fill="rgb(225,74,8)" rx="2" ry="2" />
<text  x="516.56" y="191.5" ></text>
</g>
<g >
<title>__alloc_pages (13 samples, 1.28%)</title><rect x="765.3" y="213" width="15.1" height="15.0" fill="rgb(237,111,50)" rx="2" ry="2" />
<text  x="768.34" y="223.5" ></text>
</g>
<g >
<title>free_unref_page_commit (1 samples, 0.10%)</title><rect x="691.1" y="85" width="1.1" height="15.0" fill="rgb(209,80,19)" rx="2" ry="2" />
<text  x="694.08" y="95.5" ></text>
</g>
<g >
<title>get_page_from_freelist (1 samples, 0.10%)</title><rect x="1184.2" y="197" width="1.2" height="15.0" fill="rgb(223,20,0)" rx="2" ry="2" />
<text  x="1187.20" y="207.5" ></text>
</g>
<g >
<title>lru_gen_del_folio.constprop.0 (2 samples, 0.20%)</title><rect x="1054.2" y="85" width="2.4" height="15.0" fill="rgb(207,109,50)" rx="2" ry="2" />
<text  x="1057.25" y="95.5" ></text>
</g>
<g >
<title>rep_movs_alternative (2 samples, 0.20%)</title><rect x="419.6" y="197" width="2.3" height="15.0" fill="rgb(214,122,50)" rx="2" ry="2" />
<text  x="422.58" y="207.5" ></text>
</g>
<g >
<title>__handle_mm_fault (27 samples, 2.65%)</title><rect x="754.9" y="309" width="31.3" height="15.0" fill="rgb(245,121,14)" rx="2" ry="2" />
<text  x="757.90" y="319.5" >__..</text>
</g>
<g >
<title>free_unref_page_commit (2 samples, 0.20%)</title><rect x="1051.9" y="69" width="2.3" height="15.0" fill="rgb(211,82,23)" rx="2" ry="2" />
<text  x="1054.93" y="79.5" ></text>
</g>
<g >
<title>__x64_sys_munmap (8 samples, 0.79%)</title><rect x="686.4" y="325" width="9.3" height="15.0" fill="rgb(217,223,9)" rx="2" ry="2" />
<text  x="689.44" y="335.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (15 samples, 1.47%)</title><rect x="645.8" y="389" width="17.4" height="15.0" fill="rgb(249,135,24)" rx="2" ry="2" />
<text  x="648.83" y="399.5" ></text>
</g>
<g >
<title>perf-exec (4 samples, 0.39%)</title><rect x="1185.4" y="405" width="4.6" height="15.0" fill="rgb(240,74,17)" rx="2" ry="2" />
<text  x="1188.36" y="415.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned (14 samples, 1.38%)</title><rect x="663.2" y="389" width="16.3" height="15.0" fill="rgb(243,137,26)" rx="2" ry="2" />
<text  x="666.24" y="399.5" ></text>
</g>
<g >
<title>vma_alloc_folio (15 samples, 1.47%)</title><rect x="764.2" y="245" width="17.4" height="15.0" fill="rgb(245,156,15)" rx="2" ry="2" />
<text  x="767.18" y="255.5" ></text>
</g>
<g >
<title>__rdl_alloc (3 samples, 0.29%)</title><rect x="142.3" y="373" width="3.5" height="15.0" fill="rgb(238,18,51)" rx="2" ry="2" />
<text  x="145.27" y="383.5" ></text>
</g>
<g >
<title>__mod_memcg_lruvec_state (1 samples, 0.10%)</title><rect x="693.4" y="69" width="1.2" height="15.0" fill="rgb(208,27,33)" rx="2" ry="2" />
<text  x="696.40" y="79.5" ></text>
</g>
<g >
<title>free_unref_page_list (1 samples, 0.10%)</title><rect x="691.1" y="101" width="1.1" height="15.0" fill="rgb(247,29,18)" rx="2" ry="2" />
<text  x="694.08" y="111.5" ></text>
</g>
<g >
<title>exit_mm (8 samples, 0.79%)</title><rect x="1047.3" y="293" width="9.3" height="15.0" fill="rgb(234,220,49)" rx="2" ry="2" />
<text  x="1050.29" y="303.5" ></text>
</g>
<g >
<title>__lruvec_stat_mod_folio (1 samples, 0.10%)</title><rect x="1048.4" y="133" width="1.2" height="15.0" fill="rgb(208,11,30)" rx="2" ry="2" />
<text  x="1051.45" y="143.5" ></text>
</g>
<g >
<title>handle_pte_fault (1 samples, 0.10%)</title><rect x="1184.2" y="293" width="1.2" height="15.0" fill="rgb(227,104,19)" rx="2" ry="2" />
<text  x="1187.20" y="303.5" ></text>
</g>
<g >
<title>perf_event_enable_on_exec (4 samples, 0.39%)</title><rect x="1185.4" y="181" width="4.6" height="15.0" fill="rgb(252,99,22)" rx="2" ry="2" />
<text  x="1188.36" y="191.5" ></text>
</g>
<g >
<title>__mem_cgroup_uncharge_list (2 samples, 0.20%)</title><rect x="1049.6" y="85" width="2.3" height="15.0" fill="rgb(231,136,35)" rx="2" ry="2" />
<text  x="1052.61" y="95.5" ></text>
</g>
<g >
<title>ksys_read (6 samples, 0.59%)</title><rect x="416.1" y="293" width="7.0" height="15.0" fill="rgb(214,148,30)" rx="2" ry="2" />
<text  x="419.10" y="303.5" ></text>
</g>
<g >
<title>x64_sys_call (6 samples, 0.59%)</title><rect x="416.1" y="325" width="7.0" height="15.0" fill="rgb(210,122,4)" rx="2" ry="2" />
<text  x="419.10" y="335.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (3 samples, 0.29%)</title><rect x="848.9" y="357" width="3.5" height="15.0" fill="rgb(212,204,39)" rx="2" ry="2" />
<text  x="851.88" y="367.5" ></text>
</g>
<g >
<title>core::fmt::num::imp::&lt;impl core::fmt::Display for usize&gt;::fmt (35 samples, 3.44%)</title><rect x="852.4" y="389" width="40.6" height="15.0" fill="rgb(231,178,4)" rx="2" ry="2" />
<text  x="855.36" y="399.5" >cor..</text>
</g>
<g >
<title>do_anonymous_page (1 samples, 0.10%)</title><rect x="1184.2" y="277" width="1.2" height="15.0" fill="rgb(235,124,29)" rx="2" ry="2" />
<text  x="1187.20" y="287.5" ></text>
</g>
<g >
<title>mas_walk (2 samples, 0.20%)</title><rect x="536.8" y="293" width="2.3" height="15.0" fill="rgb(239,206,33)" rx="2" ry="2" />
<text  x="539.76" y="303.5" ></text>
</g>
<g >
<title>clear_page_rep (10 samples, 0.98%)</title><rect x="767.7" y="181" width="11.6" height="15.0" fill="rgb(245,26,52)" rx="2" ry="2" />
<text  x="770.66" y="191.5" ></text>
</g>
<g >
<title>alloc_pages_mpol (1 samples, 0.10%)</title><rect x="1184.2" y="229" width="1.2" height="15.0" fill="rgb(246,205,26)" rx="2" ry="2" />
<text  x="1187.20" y="239.5" ></text>
</g>
<g >
<title>vma_alloc_folio (11 samples, 1.08%)</title><rect x="511.2" y="229" width="12.8" height="15.0" fill="rgb(205,101,20)" rx="2" ry="2" />
<text  x="514.24" y="239.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (2 samples, 0.20%)</title><rect x="783.9" y="229" width="2.3" height="15.0" fill="rgb(217,55,14)" rx="2" ry="2" />
<text  x="786.90" y="239.5" ></text>
</g>
</g>
</svg>
